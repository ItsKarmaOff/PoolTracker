services:
  client:
    build:
      context: .
      dockerfile: ./docker/client/Dockerfile
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"
    depends_on:
      - server
    networks:
      - pool-tracker-network
    restart: unless-stopped

  server:
    build:
      context: .
      dockerfile: ./docker/server/Dockerfile
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    environment:
      - NODE_ENV=${NODE_ENV}
      - HOST=${HOST}
      - PORT=${SERVER_PORT}
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - db
    networks:
      - pool-tracker-network
    restart: unless-stopped

  db:
    image: mysql:8.0
    restart: always
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./db:/var/lib/mysql
    networks:
      - pool-tracker-network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8080:80"
    environment:
      - PMA_ABSOLUTE_URI=${PMA_ABSOLUTE_URI}
      - PMA_HOST=${PMA_HOST}
      - PMA_USER=${PMA_USER}
      - PMA_PASSWORD=${PMA_PASSWORD}
    depends_on:
      - db
    networks:
      - pool-tracker-network

networks:
  pool-tracker-network:
    driver: bridge
